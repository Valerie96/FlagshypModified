%Find Displacments in host elt

syms chi eta iota

%Hex Shape Functions
%  N1 = -((chi - 1)*(eta - 1)*(iota - 1))/ 8;
%  N2 = ((chi + 1)*(eta - 1)*(iota - 1))/ 8;
%  N3 = ((chi - 1)*(eta + 1)*(iota - 1))/ 8;
%  N4 = -((chi + 1)*(eta + 1)*(iota - 1))/ 8;
%  N5 = ((chi - 1)*(eta - 1)*(iota + 1))/ 8;
%  N6 = -((chi + 1)*(eta - 1)*(iota + 1))/ 8;
%  N8 = -((chi - 1)*(eta + 1)*(iota + 1))/8;
%  N7 = ((chi + 1)*(eta + 1)*(iota + 1))/8;
% 
%  Nodal Coordinates
%  x = Transpose[x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, x5, 
%      y5, z5, x6, y6, z6, x7, y7, z7, x8, y8, z8];
% Real coordinates of point we want natural coords for
% a = Transpose[a1, a2, a3];
% NN = {{N1, 0, 0, N2, 0, 0, N3, 0, 0, N4, 0, 0, N5, 0, 0, N6, 0, 0, N7,
%      0, 0, N8, 0, 0}, {0, N1, 0, 0, N2, 0, 0, N3, 0, 0, N4, 0, 0, N5, 
%     0, 0, N6, 0, 0, N7, 0, 0, N8, 0}, {0, 0, N1, 0, 0, N2, 0, 0, N3, 
%     0, 0, N4, 0, 0, N5, 0, 0, N6, 0, 0, N7, 0, 0, N8}};

x=[
 
%Solve NN*x-a with Newton Rapson
% [ 1/8 *(-8 a1 - (-1 + chi) * (-1 + eta) * (-1 + iota)* x1 + (1 + chi)* (-1 +  ...
%  eta)* (-1 + iota)* x2 + (-1 + chi)* (1 + eta)* (-1 +  ...
%  iota)* x3 - (1 + chi) *(1 + eta) *(-1 + iota) x4 + (-1 + ...
%  chi)* (-1 + eta)* (1 + iota)* x5 - (1 + chi)* (-1 + eta)* (1 + ...
%  iota)* x6 + (1 + chi)* (1 + eta)* (1 + iota)* x7 - (-1 + chi)* (1 + ...
%   eta)* (1 + iota)* x8);,  1/8 ...
%    * (-8 a2 - (-1 + chi) *(-1 + eta) *(-1 + iota)* y1 + (1 + chi)* (-1 +  ...
%  eta)* (-1 + iota)* y2 + (-1 + chi)* (1 + eta)* (-1 +  ...
%  iota)* y3 - (1 + chi)* (1 + eta)* (-1 + iota)* y4 + (-1 +  ...
%  chi)* (-1 + eta)* (1 + iota)* y5 - (1 + chi)* (-1 + eta)* (1 +  ...
%  iota)* y6 + (1 + chi)* (1 + eta)* (1 + iota)* y7 - (-1 + chi)* (1 + ...
%   eta)* (1 + iota)* y8);,  1/8 ...
%    * (-8 a3 - (-1 + chi) *(-1 + eta)* (-1 + iota) *z1 + (1 + chi) *(-1 +  ...
%  eta)* (-1 + iota)* z2 +* (-1 + chi)* (1 + eta)* (-1 +  ...
%  iota)* z3 - (1 + chi)* (1 + eta)* (-1 + iota)* z4 + (-1 +  ...
%  chi)* (-1 + eta)* (1 + iota)* z5 - (1 + chi)* (-1 + eta)* (1 +  ...
%  iota)* z6 + (1 + chi)* (1 + eta)* (1 + iota)* z7 - (-1 + chi)* (1 + ...
%   eta)* (1 + iota)* z8);]

%Jacobian
% df1dz1 = -(1/8)*(-1 + eta)*(-1 + iota)*x1 + 1/8*(-1 + eta)*(-1 + iota)*x2 + ...
% 1/8*(1 + eta)*(-1 + iota)*x3 - 1/8*(1 + eta)*(-1 + iota)*x4 + ...
% 1/8*(-1 + eta)*(1 + iota)*x5 - 1/8*(-1 + eta)*(1 + iota)*x6 + ...
% 1/8*(1 + eta)*(1 + iota)*x7 - 1/8*(1 + eta)*(1 + iota)*x8;
% 
% df2dz1 =  -(1/8)*(-1 + eta)*(-1 + iota)*y1 + 1/8*(-1 + eta)*(-1 + iota)*y2 + ...
% 1/8*(1 + eta)*(-1 + iota)*y3 - 1/8*(1 + eta)*(-1 + iota)*y4 + ...
% 1/8*(-1 + eta)*(1 + iota)*y5 - 1/8*(-1 + eta)*(1 + iota)*y6 + ...
% 1/8*(1 + eta)*(1 + iota)*y7 - 1/8*(1 + eta)*(1 + iota)*y8;
% 
% df3dz1 =  -(1/8)*(-1 + eta)*(-1 + iota)*z1 + 1/8*(-1 + eta)*(-1 + iota)*z2 + ...
% 1/8*(1 + eta)*(-1 + iota)*z3 - 1/8*(1 + eta)*(-1 + iota)*z4 + ...
% 1/8*(-1 + eta)*(1 + iota)*z5 - 1/8*(-1 + eta)*(1 + iota)*z6 + ...
% 1/8*(1 + eta)*(1 + iota)*z7 - 1/8*(1 + eta)*(1 + iota)*z8;
% 
% df1dz2 =  -(1/8)*(-1 + chi)*(-1 + iota)*x1 + 1/8*(1 + chi)*(-1 + iota)*x2 + ...
% 1/8*(-1 + chi)*(-1 + iota)*x3 - 1/8*(1 + chi)*(-1 + iota)*x4 + ...
% 1/8*(-1 + chi)*(1 + iota)*x5 - 1/8*(1 + chi)*(1 + iota)*x6 + ...
% 1/8*(1 + chi)*(1 + iota)*x7 - 1/8*(-1 + chi)*(1 + iota)*x8;
% 
% df2dz2 =  -(1/8)*(-1 + chi)*(-1 + iota)*y1 + 1/8*(1 + chi)*(-1 + iota)*y2 + ...
% 1/8*(-1 + chi)*(-1 + iota)*y3 - 1/8*(1 + chi)*(-1 + iota)*y4 + ...
% 1/8*(-1 + chi)*(1 + iota)*y5 - 1/8*(1 + chi)*(1 + iota)*y6 + ...
% 1/8*(1 + chi)*(1 + iota)*y7 - 1/8*(-1 + chi)*(1 + iota)*y8;
% 
% df3dz2 =  -(1/8)*(-1 + chi)*(-1 + iota)*z1 + 1/8*(1 + chi)*(-1 + iota)*z2 + ...
% 1/8*(-1 + chi)*(-1 + iota)*z3 - 1/8*(1 + chi)*(-1 + iota)*z4 + ...
% 1/8*(-1 + chi)*(1 + iota)*z5 - 1/8*(1 + chi)*(1 + iota)*z6 + ...
% 1/8*(1 + chi)*(1 + iota)*z7 - 1/8*(-1 + chi)*(1 + iota)*z8;
% 
% df1dz3 =  -(1/8)*(-1 + chi)*(-1 + eta)*x1 + 1/8*(1 + chi)*(-1 + eta)*x2 + ...
% 1/8*(-1 + chi)*(1 + eta)*x3 - 1/8*(1 + chi)*(1 + eta)*x4 + ...
% 1/8*(-1 + chi)*(-1 + eta)*x5 - 1/8*(1 + chi)*(-1 + eta)*x6 + ...
% 1/8*(1 + chi)*(1 + eta)*x7 - 1/8*(-1 + chi)*(1 + eta)*x8;
% 
% df2dz3 =  -(1/8)*(-1 + chi)*(-1 + eta)*y1 + 1/8*(1 + chi)*(-1 + eta)*y2 + ...
% 1/8*(-1 + chi)*(1 + eta)*y3 - 1/8*(1 + chi)*(1 + eta)*y4 + ...
% 1/8*(-1 + chi)*(-1 + eta)*y5 - 1/8*(1 + chi)*(-1 + eta)*y6 + ...
% 1/8*(1 + chi)*(1 + eta)*y7 - 1/8*(-1 + chi)*(1 + eta)*y8;
% 
% df3dz3 =  -(1/8)*(-1 + chi)*(-1 + eta)*z1 + 1/8*(1 + chi)*(-1 + eta)*z2 + ...
% 1/8*(-1 + chi)*(1 + eta)*z3 - 1/8*(1 + chi)*(1 + eta)*z4 + ...
% 1/8*(-1 + chi)*(-1 + eta)*z5 - 1/8*(1 + chi)*(-1 + eta)*z6 + ...
% 1/8*(1 + chi)*(1 + eta)*z7 - 1/8*(-1 + chi)*(1 + eta)*z8;

%J=[df1dz1, df1dz2, df1dz3;df2dz1, df2dz2, df2dz3;df3dz1, df3dz2, df3dz3;]